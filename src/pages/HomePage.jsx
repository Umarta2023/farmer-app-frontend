// src/pages/HomePage.jsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { fetchAnnouncements, fetchMarketPrices } from '../api';
import { useAuth } from '../contexts/AuthContext';
import '../App.css';

function HomePage() {
  const { user, loading: authLoading } = useAuth();
  const [announcements, setAnnouncements] = useState([]);
  const [marketPrices, setMarketPrices] = useState([]);
  const [pageLoading, setPageLoading] = useState(true);
  const [region, setRegion] = useState(null);

  useEffect(() => {
    if (user) {
      setRegion(user.region || "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–≥–∏–æ–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
  }, [user]);

  useEffect(() => {
    if (!region) return; // –ù–µ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã, –ø–æ–∫–∞ —Ä–µ–≥–∏–æ–Ω –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω

    setPageLoading(true);
    Promise.all([
      fetchAnnouncements(region),
      fetchMarketPrices(region),
    ])
    .then(([announcementsRes, pricesRes]) => {
      setAnnouncements(announcementsRes.data || []);
      setMarketPrices(pricesRes.data || []);
    })
    .catch(error => {
      console.error("HomePage: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
      setAnnouncements([]); // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã
      setMarketPrices([]);
    })
    .finally(() => {
      setPageLoading(false);
    });
  }, [region]);

  const handleRegionChange = () => {
    const newRegion = region === "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π" ? "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π" : "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π";
    setRegion(newRegion);
  };

  if (authLoading) {
    return <div className="page-content">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>;
  }
  
  return (
    <div>
      <header className="app-header">
        <h1>–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {user ? user.first_name : '–ì–æ—Å—Ç—å'}!</h1>
        <p onClick={handleRegionChange} style={{ cursor: 'pointer' }}>
          üìç {region} (–Ω–∞–∂–º–∏, —á—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å)
        </p>
      </header>

      <div className="search-bar">
        <input type="text" placeholder="üîç –ù–∞–π–¥–∏ —Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç..." />
      </div>

      <div className="widgets-container">
        <div className="widget">
          <h3>–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ</h3>
          {pageLoading ? <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p> : (
            <ul className="prices-list">
              {Array.isArray(marketPrices) && marketPrices.map(price => (
                <li key={price.crop_name}>
                  <span>{price.crop_name}</span>
                  <span className={`price-trend trend-${price.trend}`}>
                    {price.price} ‚ÇΩ/—Ç
                    {price.trend === 'up' && ' ‚ñ≤'}
                    {price.trend === 'down' && ' ‚ñº'}
                  </span>
                </li>
              ))}
            </ul>
          )}
        </div>
        
        <div className="widget quick-actions">
          <Link to="/announcements/new" className="action-button-link">
            <button className="action-button">–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä</button>
          </Link>
          <button className="action-button">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</button>
        </div>
        
        <div className="widget">
          <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–≥–∏–æ–Ω–µ</h3>
          {pageLoading ? <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p> : (
            <ul>
              {Array.isArray(announcements) && announcements.map(ann => (
                <li key={ann.id}>
                    <Link to={`/announcements/${ann.id}`}>{ann.title}</Link>
                </li>
              ))}
              {Array.isArray(announcements) && announcements.length === 0 && <p>–û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.</p>}
            </ul>
          )}
        </div>
      </div>
    </div>
  );
}

export default HomePage;