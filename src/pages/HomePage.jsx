// src/pages/HomePage.jsx

import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { fetchAnnouncements, fetchMarketPrices } from '../api';
import '../App.css';

function HomePage() {
  const [announcements, setAnnouncements] = useState([]);
  const [marketPrices, setMarketPrices] = useState([]);
  const [loading, setLoading] = useState(true);
  const [region, setRegion] = useState("–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π");

  const handleRegionChange = () => {
    const newRegion = region === "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π" ? "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π" : "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π";
    setRegion(newRegion);
  };

  useEffect(() => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
    setAnnouncements([]);
    setMarketPrices([]);
    setLoading(true);
    
    Promise.all([
      fetchAnnouncements(region),
      fetchMarketPrices(region),
    ])
    .then(([announcementsRes, pricesRes]) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—à–ª–∏
      if (announcementsRes.data) setAnnouncements(announcementsRes.data);
      if (pricesRes.data) setMarketPrices(pricesRes.data);
    })
    .catch(error => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
    })
    .finally(() => {
      setLoading(false);
    });
  }, [region]);

  return (
    // –≠—Ç–æ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π div
    <div>
      <header className="app-header">
        <h1>–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –ò–≤–∞–Ω!</h1>
        <p onClick={handleRegionChange} style={{ cursor: 'pointer' }}>
          üìç {region} (–Ω–∞–∂–º–∏, —á—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å)
        </p>
      </header>

      <div className="search-bar">
        <input type="text" placeholder="üîç –ù–∞–π–¥–∏ —Ä–µ–º–∫–æ–º–ø–ª–µ–∫—Ç..." />
      </div>

      {/* –≠—Ç–æ—Ç div –¥–ª—è –≤–∏–¥–∂–µ—Ç–æ–≤ */}
      <div className="widgets-container">
        
        <div className="widget">
          <h3>–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ</h3>
          {loading ? <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p> : (
            <ul className="prices-list">
              {/* –î–û–ë–ê–í–õ–Ø–ï–ú –ü–†–û–í–ï–†–ö–£ Array.isArray() */}
              {Array.isArray(marketPrices) && marketPrices.map(price => (
                <li key={price.crop_name}>
                  <span>{price.crop_name}</span>
                  <span className={`price-trend trend-${price.trend}`}>
                    {price.price} ‚ÇΩ/—Ç
                    {price.trend === 'up' && ' ‚ñ≤'}
                    {price.trend === 'down' && ' ‚ñº'}
                  </span>
                </li>
              ))}
            </ul>
          )}
        </div>
        
        <div className="widget quick-actions">
          <Link to="/announcements/new" className="action-button-link">
            <button className="action-button">–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä</button>
          </Link>
          <button className="action-button">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</button>
        </div>
        
        <div className="widget">
          <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–≥–∏–æ–Ω–µ</h3>
          {loading ? (
            <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          ) : (
            <ul>
              {/* –î–û–ë–ê–í–õ–Ø–ï–ú –ü–†–û–í–ï–†–ö–£ Array.isArray() */}
              {Array.isArray(announcements) && announcements.map(ann => (
                <li key={ann.id}>{ann.title}</li>
              ))}
              {Array.isArray(announcements) && announcements.length === 0 && <p>–û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.</p>}
            </ul>
          )}
        </div>
      
      </div> {/* <-- –¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç —Ç–µ–≥ –Ω–∞ –º–µ—Å—Ç–µ */}
    </div>   // <-- –ò —ç—Ç–æ—Ç —Ç–µ–≥ —Ç–æ–∂–µ
  );
}

export default HomePage;